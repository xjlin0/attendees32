version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
#  production_traefik: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: attendees_production_django
    container_name: django
    depends_on:
      - postgres
      - redis
    user: "1001"
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
      - ./.envs/.local/.sendgrid.env
    ports:
      - "8008:5000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: attendees_production_postgres
    container_name: postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres

#  traefik:
#    build:
#      context: .
#      dockerfile: ./compose/production/traefik/Dockerfile
#    image: attendees_production_traefik
#    depends_on:
#      - django
#    volumes:
#      - production_traefik:/etc/traefik/acme:z
#    ports:
#      - "0.0.0.0:80:80"
#      - "0.0.0.0:443:443"
#      - "0.0.0.0:5555:5555"

  redis:
    image: redis:6
    container_name: redis

  celeryworker:
    <<: *django
    image: attendees_production_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: attendees_production_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: attendees_production_flower
    container_name: flower
    ports:
      - "5555:5555"
    command: /start-flower

#  awscli:
#    build:
#      context: .
#      dockerfile: ./compose/production/aws/Dockerfile
#    env_file:
#      - ./.envs/.production/.django
#    volumes:
#      - production_postgres_data_backups:/backups:z
