# Generated by Django 3.0.2 on 2020-02-19 03:00

from django.db import migrations, models
from django.conf import settings
from django.contrib.postgres.indexes import GinIndex
from django.utils import timezone
from django.contrib.auth import validators

from attendees.persons.models import Utility


class Migration(migrations.Migration):

    dependencies = [
        ('whereabouts', '0003_organization'),
        ('users', '0001_initial'),
        ('pghistory', '0003_auto_20201023_1636'),
    ]
    operations = [
        migrations.AddField(
            model_name='user',
            name='organization',
            field=models.ForeignKey(null=True, blank=True, default=None, help_text='Primary organization of the user', on_delete=models.SET_NULL, to='whereabouts.Organization'),
        ),
        migrations.AddField(
            model_name='user',
            name='infos',
            field=models.JSONField(default=Utility.user_infos, null=True, blank=True, help_text="please keep {} here even there's no data"),
        ),
        migrations.AlterModelOptions(
            name='user',
            options={},
        ),
        migrations.AddIndex(
            model_name='user',
            index=GinIndex(fields=['infos'], name='user_infos_gin'),
        ),
        migrations.CreateModel(
            name='UsersEvent',
            fields=[
                ('pgh_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('id', models.IntegerField()),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('organization', models.ForeignKey(blank=True, db_constraint=False, default=None, help_text='Primary organization of the user', null=True, on_delete=models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='whereabouts.organization')),
                ('date_joined', models.DateTimeField(default=timezone.now, verbose_name='date joined')),
                ('pgh_obj', models.ForeignKey(db_constraint=False, on_delete=models.deletion.DO_NOTHING, related_name='event', to=settings.AUTH_USER_MODEL)),
                # ('password', models.CharField(max_length=128, verbose_name='password')),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, validators=[validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('pgh_context', models.ForeignKey(db_constraint=False, null=True, on_delete=models.deletion.DO_NOTHING, related_name='+', to='pghistory.context')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Name of User')),
                ('infos', models.JSONField(blank=True, default=Utility.user_infos, help_text="please keep {} here even there's no data", null=True)),
            ],
            options={
                'db_table': 'users_users_event',
            },
        ),
        migrations.RunSQL(Utility.pgh_default_sql('users_users_event')),
    ]

