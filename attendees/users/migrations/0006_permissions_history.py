# Generated by Django 3.2.11 on 2022-04-08 18:54

from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from attendees.persons.models import Utility


class Migration(migrations.Migration):

    dependencies = [
        ('pghistory', '0004_auto_20220906_1625'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('users', '0005_user_groups_history'),
    ]
    operations = [
            migrations.CreateModel(
                name='PermissionProxy',
                fields=[
                ],
                options={
                    'proxy': True,
                    'indexes': [],
                    'constraints': [],
                },
                bases=('auth.permission',),
                managers=[
                    ('objects', django.contrib.auth.models.PermissionManager()),
                ],
            ),
        migrations.CreateModel(
            name='PermissionsHistory',
            fields=[
                ('id', models.IntegerField()),
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='contenttypes.contenttype', verbose_name='content type')),
                ('pgh_context', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context')),
                ('pgh_obj', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='history', to='users.permissionproxy')),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('codename', models.CharField(max_length=100, verbose_name='codename')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RunSQL(Utility.pgh_default_sql('users_permissionshistory', index_on_id=True, original_model_table='auth_permission')),
        pgtrigger.migrations.AddTrigger(
            model_name='permissionproxy',
            trigger=pgtrigger.compiler.Trigger(name='permission_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "users_permissionshistory" ("name", "content_type_id", "codename", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."name", NEW."content_type_id", NEW."codename", NEW."id", NOW(), \'permission.snapshot\', NEW."id", _pgh_attach_context()); RETURN NULL;', hash='22c12c6075f1eec6142bb9656427fd6d816a867a', operation='INSERT', pgid='pgtrigger_permission_snapshot_insert_6e042', table='auth_permission', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='permissionproxy',
            trigger=pgtrigger.compiler.Trigger(name='permission_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD."name" IS DISTINCT FROM NEW."name" OR OLD."content_type_id" IS DISTINCT FROM NEW."content_type_id" OR OLD."codename" IS DISTINCT FROM NEW."codename" OR OLD."id" IS DISTINCT FROM NEW."id")', func='INSERT INTO "users_permissionshistory" ("name", "content_type_id", "codename", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."name", NEW."content_type_id", NEW."codename", NEW."id", NOW(), \'permission.snapshot\', NEW."id", _pgh_attach_context()); RETURN NULL;', hash='744e883744cfb94916bdccaea1d5eb88f2fd4b76', operation='UPDATE', pgid='pgtrigger_permission_snapshot_update_aba8a', table='auth_permission', when='AFTER')),
        ),
    ]

