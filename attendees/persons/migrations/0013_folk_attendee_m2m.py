# Generated by Django 3.0.5 on 2020-05-02 19:15
from attendees.persons.models.utility import Utility
from django.db import migrations, models
import django.utils.timezone
import model_utils.fields
from private_storage.fields import PrivateFileField
from private_storage.storage.files import PrivateFileSystemStorage


class Migration(migrations.Migration):
    dependencies = [
        ('persons', '0011_attendance_m2m'),
    ]

    operations = [
        migrations.CreateModel(
            name='FolkAttendee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('display_order', models.SmallIntegerField(db_index=True, default=3000, help_text="0 will be first family")),
                ('attendee', models.ForeignKey(on_delete=models.CASCADE, to='persons.Attendee')),
                ('folk', models.ForeignKey(on_delete=models.CASCADE, to='persons.Folk')),
                ('role', models.ForeignKey(help_text='[Title] the family role of the attendee?', on_delete=models.SET(0), related_name='role', to='persons.Relation', verbose_name='attendee is')),
                ('file', PrivateFileField(blank=True, null=True, storage=PrivateFileSystemStorage(), upload_to='folk_attendee_file', verbose_name='file')),
                ('start', models.DateField(blank=True, null=True, help_text='date joining folk')),
                ('finish', models.DateField(blank=True, null=True, help_text='date leaving folk')),
                ('infos', models.JSONField(blank=True, null=True, default=Utility.relationship_infos, help_text='Example: {"show_secret": {"attendee1id": true, "attendee2id": false}}. Please keep {} here even no data')),
            ],
            options={
                'db_table': 'persons_folk_attendees',
                'ordering': ('display_order',),
            },
        ),
        migrations.RunSQL(Utility.default_sql('persons_folk_attendees')),
        migrations.AddField(
            model_name='attendee',
            name='folks',
            field=models.ManyToManyField(related_name='folks', through='persons.FolkAttendee', to='persons.Folk'),
        ),
        migrations.AddIndex(
            model_name='folkattendee',
            index=django.contrib.postgres.indexes.GinIndex(fields=['infos'], name='folkattendee_infos_gin'),
        ),
        migrations.AddConstraint(
            model_name='folkattendee',
            constraint=models.UniqueConstraint(fields=('folk', 'attendee'), condition=models.Q(is_removed=False), name='folk_attendee'),
        ),
        migrations.AddField(
            model_name='folk',
            name='attendees',
            field=models.ManyToManyField(related_name='attendees', through='persons.FolkAttendee',
                                         to='persons.Attendee'),
        ),
        migrations.CreateModel(
            name='FolkAttendeesHistory',
            fields=[
                ('pgh_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('pgh_obj', models.ForeignKey(db_constraint=False, on_delete=models.deletion.DO_NOTHING, related_name='history', to='persons.folkattendee')),
                ('id', models.BigIntegerField()),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('display_order', models.SmallIntegerField(default=3000, help_text='0 will be first family')),
                ('folk', models.ForeignKey(db_constraint=False, on_delete=models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='persons.folk')),
                ('attendee', models.ForeignKey(db_constraint=False, on_delete=models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='persons.attendee')),
                ('role', models.ForeignKey(db_constraint=False, help_text='[Title] the family role of the attendee?', on_delete=models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='persons.relation', verbose_name='attendee is')),
                ('file', PrivateFileField(blank=True, null=True, storage=PrivateFileSystemStorage(), upload_to='folk_attendee_file', verbose_name='file')),
                ('start', models.DateField(blank=True, help_text='date joining folk', null=True)),
                ('finish', models.DateField(blank=True, help_text='date leaving folk', null=True)),
                ('infos', models.JSONField(blank=True, default=Utility.relationship_infos, help_text='Example: {"show_secret": {"attendee1id": true, "attendee2id": false}}. Please keep {} here even no data', null=True)),
                ('pgh_context', models.ForeignKey(db_constraint=False, null=True, on_delete=models.deletion.DO_NOTHING, related_name='+', to='pghistory.context')),
            ],
            options={
                'db_table': 'persons_folk_attendeeshistory',
            },
        ),
        migrations.RunSQL(Utility.pgh_default_sql('persons_folk_attendeeshistory', original_model_table='persons_folk_attendees')),
    ]


# class Migration(migrations.Migration):
#
#     dependencies = [
#         ('persons', '0013_folk_attendee_m2m'),
#     ]
#
#     operations = [
#         migrations.CreateModel(
#             name='Relationship',
#             fields=[
#                 ('id', model_utils.fields.UUIDField(default=uuid4, editable=False, primary_key=True, serialize=False)),
#                 ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
#                 ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
#                 ('is_removed', models.BooleanField(default=False)),
#                 ('relation', models.ForeignKey('persons.Relation', related_name='relation', null=False, blank=False, on_delete=models.SET(0), verbose_name='to_attendee is', help_text="[Title] What would from_attendee call to_attendee?")),
#                 ('emergency_contact', models.BooleanField('to_attendee is the emergency contact?', default=False, null=False, blank=False, help_text="[from_attendee decide:] Notify to_attendee of from_attendee's emergency?")),
#                 ('scheduler', models.BooleanField('to_attendee is the scheduler?', default=False, null=False, blank=False, help_text="[from_attendee decide:] to_attendee can view/change the schedules of the from_attendee?")),
#                 ('from_attendee', models.ForeignKey(on_delete=models.CASCADE, related_name='from_attendee', to='persons.Attendee')),
#                 ('to_attendee', models.ForeignKey(on_delete=models.CASCADE, related_name='to_attendee', to='persons.Attendee')),
#                 ('start', models.DateTimeField(blank=True, null=True)),
#                 ('finish', models.DateTimeField(null=True, blank=True, help_text='The relation will be ended at when')),
#                 ('in_family', models.ForeignKey(blank=True, null=True, on_delete=models.SET_NULL, related_name='in_family', to='persons.Family')),
#                 ('infos', JSONField(blank=True, null=True, default=Utility.relationship_infos, help_text='Example: {"show_secret": {"attendee1id": true, "attendee2id": false}}. Please keep {} here even no data')),
#             ],
#             options={
#                 'db_table': 'persons_relationships',
#             },
#             bases=(models.Model, Utility),
#         ),
#         migrations.AddField(
#             model_name='attendee',
#             name='related_ones',
#             field=models.ManyToManyField(related_name='related_to', through='persons.Relationship', to='persons.Attendee'),
#         ),
#         migrations.AddConstraint(
#             model_name='relationship',
#             constraint=models.UniqueConstraint(fields=('from_attendee', 'to_attendee', 'relation'), condition=models.Q(is_removed=False), name='attendee_relation'),
#         ),
#         migrations.AddIndex(
#             model_name='relationship',
#             index=django.contrib.postgres.indexes.GinIndex(fields=['infos'], name='relationship_infos_gin'),
#         ),
#     ]
