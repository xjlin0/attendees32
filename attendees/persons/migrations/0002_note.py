# Generated by Django 3.0.2 on 2020-01-11 23:34

from django.db import migrations, models
from uuid import uuid4
# from django.contrib.postgres.fields.jsonb import JSONField
import django.utils.timezone
import model_utils.fields

from attendees.persons.models import Utility


class Migration(migrations.Migration):

    dependencies = [
        ('persons', '0001_category'),
    ]

    operations = [
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('organization', models.ForeignKey(on_delete=models.SET(0), to='whereabouts.Organization')),
                ('category', models.ForeignKey(help_text="subtype: for note it's public/counseling sub-types etc", on_delete=models.SET(0), to='persons.Category')),
                ('display_order', models.SmallIntegerField(blank=False, default=0, null=False)),
                ('content_type', models.ForeignKey(on_delete=models.SET(0), to='contenttypes.ContentType')),
                ('object_id', models.CharField(max_length=36)),
                ('body', models.TextField()),
                ('infos', models.JSONField(blank=True, default=Utility.relationship_infos, help_text='Example: {"owner": "John"}. Please keep {} here even no data', null=True)),
            ],
            options={
                'db_table': 'persons_notes',
                'ordering': ('organization', 'category', 'content_type', 'object_id', 'display_order', '-modified',),
            },
        ),
        migrations.AddIndex(
            model_name='note',
            index=django.contrib.postgres.indexes.GinIndex(fields=['infos'], name='note_infos_gin'),
        ),
    ]
