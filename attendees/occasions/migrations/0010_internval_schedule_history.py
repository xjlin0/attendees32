# Generated by Django 3.2.15 on 2022-09-15 05:01

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_celery_beat.models
import django_celery_beat.validators
import pgtrigger.compiler
import pgtrigger.migrations
import timezone_field.fields

from attendees.persons.models import Utility


class Migration(migrations.Migration):

    dependencies = [
        ('pghistory', '0004_auto_20220906_1625'),
        ('django_celery_beat', '0016_alter_crontabschedule_timezone'),
        ('occasions', '0009_meet_attending'),
    ]

    operations = [
        migrations.CreateModel(
            name='IntervalScheduleProxy',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('django_celery_beat.intervalschedule',),
        ),
        migrations.CreateModel(
            name='IntervalScheduleHistory',
            fields=[
                ('every', models.IntegerField(help_text='Number of interval periods to wait before running the task again', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Number of Periods')),
                ('period', models.CharField(choices=[('days', 'Days'), ('hours', 'Hours'), ('minutes', 'Minutes'), ('seconds', 'Seconds'), ('microseconds', 'Microseconds')], help_text='The type of period between task runs (Example: days)', max_length=24, verbose_name='Interval Period')),
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('pgh_context', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context')),
                ('pgh_obj', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='history', to='occasions.intervalscheduleproxy')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RunSQL(Utility.pgh_default_sql('occasions_intervalschedulehistory', index_on_id=True, original_model_table='django_celery_beat_intervalschedule')),
        pgtrigger.migrations.AddTrigger(
            model_name='intervalscheduleproxy',
            trigger=pgtrigger.compiler.Trigger(name='intervalschedule_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "occasions_intervalschedulehistory" ("every", "period", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."every", NEW."period", NEW."id", NOW(), \'intervalschedule.snapshot\', NEW."id", _pgh_attach_context()); RETURN NULL;', hash='bd121afb0f53557418133546e4ee994781533640', operation='INSERT', pgid='pgtrigger_intervalschedule_snapshot_insert_1525e', table='django_celery_beat_intervalschedule', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='intervalscheduleproxy',
            trigger=pgtrigger.compiler.Trigger(name='intervalschedule_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD."every" IS DISTINCT FROM NEW."every" OR OLD."period" IS DISTINCT FROM NEW."period" OR OLD."id" IS DISTINCT FROM NEW."id")', func='INSERT INTO "occasions_intervalschedulehistory" ("every", "period", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."every", NEW."period", NEW."id", NOW(), \'intervalschedule.snapshot\', NEW."id", _pgh_attach_context()); RETURN NULL;', hash='c83f19576134a26b8b81aa7af23fa8c94f606e16', operation='UPDATE', pgid='pgtrigger_intervalschedule_snapshot_update_e7cc2', table='django_celery_beat_intervalschedule', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='intervalscheduleproxy',
            trigger=pgtrigger.compiler.Trigger(name='intervalschedule_before_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "occasions_intervalschedulehistory" ("every", "period", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (OLD."every", OLD."period", OLD."id", NOW(), \'intervalschedule.before_delete\', OLD."id", _pgh_attach_context()); RETURN NULL;', hash='33121d7ff07572bcc267cfdda49a0fd486a8789d', operation='DELETE', pgid='pgtrigger_intervalschedule_before_delete_ab275', table='django_celery_beat_intervalschedule', when='AFTER')),
        ),
    ]
