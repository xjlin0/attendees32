# Generated by Django 3.2.15 on 2022-09-14 23:50

from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from schedule.models import freqs

from attendees.persons.models import Utility


class Migration(migrations.Migration):

    dependencies = [
        ('schedule', '0014_use_autofields_for_pk'),
        ('pghistory', '0004_auto_20220906_1625'),
        ('occasions', '0011_calendarrelation_history'),
    ]

    operations = [
        migrations.CreateModel(
            name='RuleProxy',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('schedule.rule',),
        ),
        migrations.CreateModel(
            name='RuleHistory',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField()),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_obj', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='history', to='occasions.ruleproxy')),
                ('description', models.TextField(verbose_name='description')),
                ('params', models.TextField(blank=True, verbose_name='params')),
                ('pgh_context', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context')),
                ('frequency', models.CharField(choices=freqs, max_length=10, verbose_name='frequency')),
                ('name', models.CharField(max_length=32, verbose_name='name')),
                ('pgh_label', models.TextField(help_text='The event label.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RunSQL(Utility.pgh_default_sql('occasions_rulehistory', index_on_id=True, original_model_table='schedule_rule')),
        pgtrigger.migrations.AddTrigger(
            model_name='ruleproxy',
            trigger=pgtrigger.compiler.Trigger(name='calendar_snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "occasions_rulehistory" ("name", "description", "frequency", "params", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."name", NEW."description", NEW."frequency", NEW."params", NEW."id", NOW(), \'calendar.snapshot\', NEW."id", _pgh_attach_context()); RETURN NULL;', hash='b35dd32dbbb13d53a61007e73f801a63dc1b0ec6', operation='INSERT', pgid='pgtrigger_calendar_snapshot_insert_3067d', table='schedule_rule', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='ruleproxy',
            trigger=pgtrigger.compiler.Trigger(name='calendar_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD."name" IS DISTINCT FROM NEW."name" OR OLD."description" IS DISTINCT FROM NEW."description" OR OLD."frequency" IS DISTINCT FROM NEW."frequency" OR OLD."params" IS DISTINCT FROM NEW."params" OR OLD."id" IS DISTINCT FROM NEW."id")', func='INSERT INTO "occasions_rulehistory" ("name", "description", "frequency", "params", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."name", NEW."description", NEW."frequency", NEW."params", NEW."id", NOW(), \'calendar.snapshot\', NEW."id", _pgh_attach_context()); RETURN NULL;', hash='96f5340109176839f2fce6291d3f448635c6a348', operation='UPDATE', pgid='pgtrigger_calendar_snapshot_update_9156f', table='schedule_rule', when='AFTER')),
        ),
    ]
